
global !p

def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
    return x != '0' and x != '0'

endglobal

snippet template "Basic template" b
\documentclass[a4paper]{article}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{textcomp}
\usepackage[dutch]{babel}
\usepackage{amsmath, amssymb}


% figure support
\usepackage{import}
\usepackage{xifthen}
\pdfminorversion=7
\usepackage{pdfpages}
\usepackage{transparent}
\newcommand{\incfig}[1]{%
	\def\svgwidth{\columnwidth}
	\import{./figures/}{#1.pdf_tex}
}

\pdfsuppresswarningpagegroup=1

\begin{document}
	$0
\end{document}
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet itm "Item" bA
\item $0
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
\] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet


context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet


snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_prioting()
snip.rv = eval('latex(' + match.group(1)
               .replace('\\left(', '(').replace('\\right)', ')')
               .replace('\\left[', '[').replace('\\right]', ']')
               .replace('\\left\\{', '{').replace('\\right\\}', '}')
               .replace('\\', '')
               .replace('^', '**')
               .replace('{', '(')
               .replace('}', ')') + ')')
`
endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

snippet vmat "vmat" iA
\begin{vmatrix} $1 \end{vmatrix} $0
endsnippet

context "math()"
snippet det  "det" iA
\det
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr) "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr} "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr] "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet


context "math()"
snippet parti "partial derivative" w
\partial
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet


context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet


priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet


snippet ~~ "~" iA
\sim 
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

snippet || "mid" iA
 \mid 
endsnippet


context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

context "math()"
snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

context "math()"
snippet NN "n" iA
\mathbb{N}
endsnippet

context "math()"
snippet Nn "cap" iA
\cap 
endsnippet

context "math()"
snippet UU "cup" iA
\cup 
endsnippet

context "math()"
snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet OO "emptyset" iA
\emptyset
endsnippet

context "math()"
snippet RR "real" iA
\mathbb{R}
endsnippet

context "math()"
snippet QQ "Q" iA
\Q
endsnippet

context "math()"
snippet ZZ "Z" iA
\mathbb{Z}
endsnippet

context "math()"
snippet <! "normal" iA
\triangleleft 
endsnippet

# snippet <> "hokje" iA
# \diamond 
# endsnippet


context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

context "math()"
snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
\end{align*}
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet


snippet HH "H" iA
\mathbb{H}
endsnippet

context "math()"
snippet DD "D" iA
\mathbb{D}
endsnippet


# vim:ft=snippets

#############
# SELF MADE #
#############

snippet notes "Notes template" b
\documentclass[12pt letter]{report}
\input{./template/preamble}
\input{./template/macros}
\input{./template/letterfonts}

\title{\Huge{$1}}
\author{\huge{Madiba Hudson-Quansah}}
\date{$2}
\usepackage{parskip}

\setcounter{tocdepth}{4}
\setcounter{secnumdepth}{4}

\begin{document}
\maketitle
\newpage
\pdfbookmark[section]{\contentsname}{too}
\tableofcontents
\pagebreak

$3
\end{document}
endsnippet

snippet hw "Homework template" b
\documentclass[12pt letter]{report}
\input{../template/preamble}
\input{../template/macros}
\input{../template/letterfonts}

\usepackage{parskip}
\title{\Huge{$1}}
\author{\huge{Madiba Hudson-Quansah}}
\date{$2}


\begin{document}
\maketitle
\newpage

\qs{}{
$2
}

\sol{
$3
}

$4

\end{document}
endsnippet

snippet menv "Math environ aligned" bA
\begin{displaymath}
	$1
\end{displaymath}
endsnippet


snippet inl "Markdown inline LaTex" mA
$${1:${VISUAL}}$
endsnippet

# snippet al "LaTex align" bA
# \begin{align}
# $1
# \end{align}
# endsnippet

# snippet al* "LaTex align*" bA
# \begin{align*}
# $1
# \end{align*}
# endsnippet

context "math()"
snippet lim "LaTex limit" wA
\lim_{$1 \to $2} $3
endsnippet

snippet wise "LaTex Piecewise Function" bA
\begin{cases}
$1, & \text{if } $2\\\
$3 & \text{if } $4
\end{cases}
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet td "superscript" iA
^{$1}$0
endsnippet

# context "math()"
# snippet // "Fraction" iA
# \\frac{$1}{$2}$0
# endsnippet
#
# priority 2000
# context "math()"
# snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
# \\frac{`!p snip.rv = match.group(1)`}{$1}$0
# endsnippet
#
# context "math()"
# snippet / "Fraction" iA
# \\frac{${VISUAL}}{$1}$0
# endsnippet
#
# priority 1000
# context "math()"
# snippet '^.*\)/' "() Fraction" wrA
# `!p
# stripped = match.string[:-1]
# depth = 0
# i = len(stripped) - 1
# while True:
# 	if stripped[i] == ')': depth += 1
# 	if stripped[i] == '(': depth -= 1
# 	if depth == 0: break;
# 	i -= 1
# snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
# `{$1}$0
# endsnippet

snippet sympy "sympy block " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet

context "math()"
snippet ooo "Infinity" iA
\infty
endsnippet

context "math()"
snippet == "equals" iA
&= $1 \\\\
endsnippet

# priority 100
# context "math()"
# snippet -> "to" iA
# \to 
# endsnippet

context "math()"
snippet >= "greater eq" iA
\geq
endsnippet


context "math()"
snippet <= "less eq" iA
\leq
endsnippet

context "math()"
snippet root "square root" iA
\sqrt{$1}
endsnippet

context "math()"
snippet ~^ "prime" iA
^{\prime}
endsnippet

context "math()"
snippet 1/2 "half" iA
\frac{1}{2}
endsnippet

context "math()"
snippet sin "sine" iwA
\sin($1)
endsnippet

context "math()"
snippet tan "tangent" iwA
\tan($1)
endsnippet

context "math()"
snippet cos "cosine" iwA
\cos($1)
endsnippet

context "math()"
snippet sec "secant" iwA
\sec($1)
endsnippet

context "math()"
snippet csc "cosecant" iwA
\csc($1)
endsnippet

context "math()"
snippet cot "cotangent" iwA
\cot($1)
endsnippet

context "math()"
snippet +- "Plus or Minus" iA
\pm$1
endsnippet

context "math()"
snippet teta "Theta" iA
\theta
endsnippet

context "math()"
snippet Teta "Theta" iA
\Theta
endsnippet

context "math()"
snippet omg "Omega" iA
\omega
endsnippet

context "math()"
snippet Omg "Omega" iA
\Omega
endsnippet

context "math()"
snippet alp "Alpha" iwA
\alpha
endsnippet

context "math()"
snippet phi "Phi" iwA
\phi
endsnippet

context "math()"
snippet eta "Eta" iwA
\eta
endsnippet

context "math()"
snippet beta "beta" iwA
\beta
endsnippet


context "math()"
snippet txt "text" iA
\text{$1 }$2
endsnippet

context "math()"
snippet there "therefore" iwA
\therefore
endsnippet

# context "math()"
# snippet in "in" bwA
# \in
# endsnippet

context "math()"
snippet diff "Dy/Dx" iA
\frac{d}{d$1}$2
endsnippet

context "math()"
snippet dy "Dy/Dx" ibA
\frac{d${1}}{d${2}}$3
endsnippet


context "math()"
snippet pi "Pie" iwA
\pi $1
endsnippet

context "math()"
snippet Pi "Pi" iwA
\Pi
endsnippet


context "math()"
snippet isi "Sine Inverse" iwA
\sin^{-1}($1)$2
endsnippet

context "math()"
snippet ita "Tangent Inverse" iwA
\tan^{-1}($1)$2
endsnippet

context "math()"
snippet ico "Cosine Inverse" iwA
\cos^{-1}($1)$2
endsnippet

context "math()"
snippet \\ "newline" iA
\\\ $1
endsnippet

context "math()"
snippet thed "mathrm d" iA
\enspace  \mathrm{d}$1
endsnippet

context "math()"
snippet and "conjunction ^" iA
\wedge $1
endsnippet

context "math()"
snippet dis "disjunction v" iA
\vee $1
endsnippet

context "math()"
snippet xor "exclusive or" iA
\oplus $1
endsnippet

context "math()"
snippet neg "negation" iA
\neg $1
endsnippet

snippet INT "True" iA
$T$ $1
endsnippet

snippet INF "False" iA
$F$ $1
endsnippet

snippet INP "p" iA
$p$
endsnippet

snippet INQ "q" iA
$q$
endsnippet

snippet INR "r" iA
$r$
endsnippet

snippet INS "S" iA
$s$
endsnippet


snippet NP "~p" iwA
$\neg p$
endsnippet

snippet NQ "~q" iwA
$\neg q$
endsnippet

snippet NR "~r" iwA
$\neg r$
endsnippet

snippet NS "~s" iwA
$\neg s$
endsnippet

snippet truthT "truth table" iwA
\begin{table}[h!]
	\caption{$1}\label{tab:$2}
	\begin{center}
		\begin{tabular}{|c c|c|$3}
			\hline
			$4 \\\ [0.5ex]
			\hline
			\hline
			$5
			\hline
		\end{tabular}
	\end{center}
\end{table}
endsnippet

snippet stateT "state table" iwA
\begin{table}[h!]
  \begin{center}
    \begin{tabular}{*{$1}{wc{7mm}}} \toprule
      \multicolumn{$2}{c}{$3} &
      \multicolumn{$4}{c}{$5}                                                       \\\\
	  $6
      \cmidrule(lr){1-4}\cmidrule(lr){5-8}
$7 \\\\
	  $8
	  \midrule
      \bottomrule
    \end{tabular}
  \end{center}
\end{table}
endsnippet


context "math()"
snippet sigma "sigma" iwA
\sigma $1
endsnippet

context "math()"
snippet Sigma "Sigma" iwA
\Sigma $1
endsnippet

context "math()"
snippet mu "mu" iwA
\mu $1
endsnippet

context "math()"
snippet lam "lambda" iwA
\lambda $1
endsnippet

context "math()"
snippet Mu "Mu" iwA
\Mu $1
endsnippet

context "math()"
snippet eq "equivalent" iwA
\equiv $1
endsnippet

context "math()"
snippet tag "tag" iwA
\tag*{$1}$2
endsnippet

snippet dfn "definition" iwA
\dfn{$1}{
	$2
}
endsnippet

snippet ex "example" ibA
\ex{}{
	$1
}
endsnippet

snippet qan "question and solution" iwA
\qs{}{
$1
}

\sol{
$2
}
endsnippet

snippet qap "question and solution" iwA
\qs{}{
$1
}

\begin{myproof}
$2
\end{myproof}
endsnippet


snippet DU "Domain of Discourse" iwA
\mathbb{U}
endsnippet

snippet PP "Probability" iwA
\mathbb{P}
endsnippet

snippet VX "variable x" iwA
$x$
endsnippet

snippet VY "variable y" iwA
$y$
endsnippet

snippet VZ "variable z" iwA
$z$
endsnippet

snippet nind "noindent" iwA
\noindent 
endsnippet

snippet \\ "newline" iwA
\\\
$1
endsnippet

snippet denv "deduction" iwA
\begin{math}
\begin{deduction}
$1
\end{deduction}
\end{math}
endsnippet

snippet prms "premise" iwA
\premise{ ${1:${VISUAL}} }
endsnippet

snippet cnc "conclusion" iwA
\conclusion{ ${1:${VISUAL}} }
endsnippet

snippet reasonT "reason table" iwA
\gdef\rownumber{\stepcounter{magicrownumbers}\arabic{magicrownumbers}}
\begin{table}[h!]
	\begin{center}
		\begin{tabular}{ | @{\makebox[3em][r]{\rownumber\space}} | c | c | }
			\hline
			\multicolumn{1}{ | @{\makebox[3em][r]{~}} |c| }{Steps}                  & \multicolumn{1}{|c|}{Reasons} \\\
			\hline
			\hline
			$1
			\hline
		\end{tabular}
	\end{center}
\end{table}
endsnippet

context "math()"
snippet epsilon "epsilon" iwA
\epsilon
endsnippet

context "math()"
snippet tau "tau" iwA
\tau
endsnippet

context "math()"
snippet delta "delta" iwA
\delta
endsnippet

context "math()"
snippet Delta "Delta" iwA
\Delta
endsnippet

context "math()"
snippet ,, "Math space" iA
\,
endsnippet

context "math()"
snippet nin "not in" iwA
\notin
endsnippet

context "math()"
snippet bbm "bold math" iwA
\mathbb{${1:${VISUAL}}}
endsnippet

snippet mproof "Proof" iwA
\begin{myproof}
	${1:${VISUAL}}
\end{myproof}
endsnippet

snippet vennT "Venn Diagram" iwA
\begin{tikzpicture}

\node[draw, circle, minimum size=3cm, label=120:$A$] (A) at (0,0) {};

\node[draw, circle, minimum size=3cm, label=60:$B$] (B) at (2,0) {};

\end{tikzpicture}
endsnippet

snippet venn2 "Venn Diagram" iwA
\begin{venndiagram2sets}
$1
\end{venndiagram2sets}
endsnippet

snippet venn3 "Venn Diagram" iwA
\begin{venndiagram3sets}
$1
\end{venndiagram3sets}
endsnippet

snippet venA "Venn diagram fill A" iwA
\fillA
endsnippet

snippet venB "Venn diagram fill B" iwA
\fillB
endsnippet

snippet venC "Venn diagram fill C" iwA
\fillC
endsnippet

snippet c= "Is a subset of" iwA
\subseteq
endsnippet

snippet c!= "Is not a subset of" iwA
\nsubseteq
endsnippet

context "math()"
snippet poS "Power set" iwA
\mathcal{P}($1)
endsnippet

snippet bsT "Basis Step" iwA
\\noindent \\underline{Basis Step} \\\
\\\
endsnippet

snippet isT "Induction Step" iwA
\\noindent \\underline{Induction  Step} \\\
\\\
endsnippet

snippet grA "Graph" iwA
\\begin{figure}[htpb]
\\centering
\\begin{tikzpicture}[node distance={3cm},thick,main/.style = {draw, circle}]
$1

\\path
$2
\\end{tikzpicture}
\\caption{$3}
\\end{figure}
endsnippet

priority 1
context "math()"
snippet "~BB" "Math Bold" riA
\mbold{$1}$0
endsnippet

priority 100
context "math()"
snippet "([ac-zAC-Z])~B" "Math bold" riA
\mbold{`!p snip.rv=match.group(1)`}
endsnippet



context "math"
snippet ~vB "Bold v" iwA
\mathbf{v}
endsnippet

context "math"
snippet ~aB "Bold a" iwA
\mathbf{a}_$1
endsnippet

context "math"
snippet ~bB "Bold b" iwA
\mathbf{b}
endsnippet

context "math"
snippet ~xB "Bold x" iwA
\mathbf{x}
endsnippet

context "math"
snippet colsp "Column Space" iwA
\text{Col }$1
endsnippet

context "math"
snippet nulsp "Null Space" iwA
\text{Nul }$1
endsnippet

context "math"
snippet splt "Split env" iwA
\begin{split}
$1
\end{split}
endsnippet

snippet cenv "Code env" iwA
\begin{lstlisting}[language=$1]
$2
\end{lstlisting}
endsnippet

snippet cinl "Code inline" iwA
\lstinline{$1}
endsnippet

snippet cdm "Code display" iwA
\begin{center}
	\lstinline{$1}
\end{center}
endsnippet

snippet aenv "algorithm" ibA
\begin{algorithm}[H]
\caption{$1}
  \Comment{}\\\\
  \Comment{$2} \\\\
  \Comment{Input: $3} \\\\
  \Comment{Output: $4} \\\\
\begin{algorithmic}[1]
	$5
\end{algorithmic}
\end{algorithm}
endsnippet

context "env('algorithmic')"
snippet if "if" iwA
\If{$1}
$2
\EndIf
endsnippet

context "env('algorithmic')"
snippet els "else" iwA
\Else
endsnippet


context "env('algorithmic')"
snippet elif "else if" iwA
\ElsIf{$1}
endsnippet

context "env('algorithmic')"
snippet for "for" iwA
\For{$1}
$2
\EndFor
endsnippet

context "env('algorithmic')"
snippet call "call function" iwA
\Call{$1}{$2}
endsnippet

context "env('algorithmic')"
snippet while "while" iwA
\While{$1}
$2
\EndWhile
endsnippet

context "env('algorithmic')"
snippet ret "return" iwA
\State \Return $1
endsnippet

context "env('algorithmic')"
snippet func "function" iwA
\Function{$1}{$2}
$3
\EndFunction
endsnippet

context "env('algorithmic')"
snippet cmt "comment" iwA
\Comment{$1}
endsnippet

context "env('algorithmic')"
snippet stt "state" iwA
\State $1
endsnippet


snippet graP "Graph" iwA
\begin{tikzpicture}
  \begin{axis}[
      xlabel=$n$,
      ylabel=$y$,
      xmin = 0, xmax = 30,
      xtick distance = 2,
      grid = both,
      minor tick num = 1,
      width = \textwidth,
      height = 0.5\textwidth,
	        legend cell align = {left},
      legend pos = north west

    ]
    $1
	\legend{
$2
	}
  \end{axis}
\end{tikzpicture}
endsnippet


snippet thm "Theorem" iwA
\thm{$1}{
$2
}
endsnippet


context "math()"
snippet abs "Absolute" iwA
\left| $1 \right|
endsnippet

context "math()"
snippet mod "Modulus" iwA
\bmod
endsnippet

context "math()"
snippet <- "gets" iwA
\gets
endsnippet

context "math()"
snippet trans "transpose" iwA
^T
endsnippet

snippet karn "Karnaugh" iwA
\\begin{figure}[htpb]
\\centering
\\begin{karnaugh-map}[2][2]
\\autoterms[-]
\\end{karnaugh-map}
\\end{figure}
endsnippet

snippet circDi "Circuit Diagram" iwA
\\begin{figure}[h]
\\begin{circuitikz}
\\draw
${1}
;

\\end{circuitikz}
\\end{figure}
endsnippet

context "math()"
snippet lfa "Fancy L" iwA
\ell
endsnippet
